@using System.ComponentModel.DataAnnotations
@using DarkBot.Models
@using DarkBot.Services
@using Newtonsoft.Json
@if (Channels is not null)
{
    <div class="card w-80 bg-base-200 border-2 border-neutral mb-4">
        <div class="card-body">
            <EditForm OnValidSubmit="OnSetNewChannel" class="card-body w-full flex flex-col gap-4 bg-red-40 p-0" Model="SelectedChannel">
                <DataAnnotationsValidator/>
                <h2 class="font-bold text-2xl">Change Channel</h2>

                <ValidationSummary class="text-error font-bold text-center"/>
                <InputSelect @bind-Value="SelectedChannel.Id" class="select text-xl w-full bg-base-300">
                    <option value="null" disabled selected>Select Channel</option>
                    @foreach (var channel in Channels)
                    {
                        <option value="@channel.ChannelId">@channel.Name</option>
                    }
                </InputSelect>

                <button class="btn btn-primary text-2xl text-primary-content" type="submit">Change</button>
            </EditForm>
        </div>
    </div>
}

@code{

    public class SelectedChannelModel
    {
        [Required(ErrorMessage = "Please select a channel!")]
        public string Id { get; set; }
    }

    private SelectedChannelModel SelectedChannel { get; set; } = new();
    private List<ChannelModel>? Channels { get; set; }

    [Inject] public QotService Service { get; set; } = null!;
    [Inject] public NavigationManager Manager { get; set; } = null!;
    [Inject] public IJSRuntime JsRuntime { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        Channels = await Service.GetChannels();
    }

    private async Task OnSetNewChannel()
    {
        var result = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (!result) return;

        await Service.UpdateChannel(SelectedChannel.Id);
        Manager.NavigateTo(Manager.Uri, true);
    }

}