@using DarkBot.Models
@using Newtonsoft.Json
@using System.ComponentModel.DataAnnotations
@using DarkBot.Clients
@using Microsoft.IdentityModel.Tokens
@using Microsoft.VisualBasic
@rendermode InteractiveServer

@if (JoinedGuilds is not null)
{
    <div class="card w-80 bg-base-200 border-2 border-neutral mb-4">
        <EditForm OnValidSubmit="OnSetCurrentGuild" class="card-body w-full flex flex-col gap-4" Model="SelectedGuild">
            <DataAnnotationsValidator />
            <h2 class="text-2xl font-bold">Select Active Guild</h2>
            <ValidationSummary class="text-error font-bold text-center"/>
            <InputSelect @bind-Value="SelectedGuild.Id" class="select text-xl w-full max-w-xs bg-base-300 border-2 border-neutral">
                <option value="null" disabled selected>Select Guild</option>
                @foreach (var joinedGuild in JoinedGuilds)
                {
                    <option value="@joinedGuild.GuildId">@joinedGuild.Name</option>
                }
            </InputSelect>

            <button class="btn btn-primary text-2xl text-primary-content" type="submit">Change</button>
        </EditForm>
    </div>
}


@code{

    public class SelectedGuildModel
    {
        [Required(ErrorMessage = "Please select a guild!")]
        public string Id { get; set; }
    }
    
    [Inject] public BackendHttpClient Client { get; set; } = null!;
    [Inject] public NavigationManager Manager { get; set; } = null!;
    [Inject] public IJSRuntime JsRuntime { get; set; } = null!;
    
    private List<GuildModel>? JoinedGuilds { get; set; }

    private SelectedGuildModel SelectedGuild { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        JoinedGuilds = await Client.GetAsync<List<GuildModel>>("api/Home/GetJoinedGuilds");
    }

    private async Task OnSetCurrentGuild()
    {
        var result = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (!result) return;
        
        await Client.PostAsJsonAsync("api/Home/CurrentGuild", SelectedGuild.Id);
        Manager.NavigateTo(Manager.Uri, true);
    }

}